{\rtf1\ansi\ansicpg936\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset134 PingFangSC-Regular;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 pragma solidity ^0.5.16;\
\
/**\
 \{\
    arbi4 0xc8c447c2120F18DA57D432F03178C04498804c0b owner: 0xe190c28bb3965C7013A523848181175228055e8f\
 \}\
*/\
\
contract USERS \{\
    string public name     = "USERS";\
    address public administrator=0x2d6283FF3777Ae609B01b4BB9dA1e95088204400;\
    \
    struct user\{\
        uint date;\
        address account;\
        string key;\
        uint container; // 11 
\f1 \'c8\'dd\'c6\'f7\'d7\'d6\'b6\'ce
\f0  
\f1 \'d2\'d4
\f0 1
\f1 \'bf\'aa\'c7\'b0\'cd\'b7
\f0  1
\f1 \'ce\'bb\'ce\'aa\'d7\'b4\'cc\'ac
\f0  1
\f1 \'d5\'fd\'b3\'a3
\f0  0
\f1 \'b7\'c7\'d5\'fd\'b3\'a3
\f0 \
    \}\
    mapping (address => user) private users;\
    address[] public usersArray;\
    \
    mapping (address => bool) private admins;\
    \
    function addAdmin(address account, bool status) public \{\
        require(msg.sender == administrator);\
        admins[account] = status;\
    \}\
    \
    function isAdmin(address account) public view returns (bool)\{\
        return admins[account];\
    \}\
    \
    function getUsersArrayLength() public view returns (uint) \{\
        return usersArray.length;\
    \}\
    \
    function addUser(address account, string calldata key, uint container) external \{\
        \
        users[msg.sender] = user(block.timestamp, account, key, container);\
        usersArray.push(msg.sender);\
\
    \}\
    \
    function getMyAccount() external view returns(uint date,address account,string memory key,uint container) \{\
        \
        date = users[msg.sender].date;\
        account = users[msg.sender].account;\
        key = users[msg.sender].key;\
        container = users[msg.sender].container;\
\
    \}\
    \
    function getAccount(address account) external view returns(uint date,address outAccount,string memory key,uint container) \{\
        require(admins[msg.sender]);\
        date = users[account].date;\
        outAccount = users[account].account;\
        key = users[account].key;\
        container = users[account].container;\
\
    \}\
    \
\}\
}